[General]
network = LogNormalGridTestTX
#record-eventlog = true
#eventlog-message-detail-pattern = *:(not declaredOn(cMessage) and not declaredOn(cNamedObject) and not declaredOn(cObject))

*.numHosts = 20

num-rngs = 3
**.mobility.rng-0 = 1
**.wlan[*].mac.rng-0 = 2
#debug-on-errors = true

tkenv-plugin-path = ../../../etc/plugins

output-vector-file = ${resultdir}/${configname}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}-${runnumber}.sca

#**.channelNumber = 0

# channel physical parameters
*.radioMedium.mediumLimitCache.carrierFrequency = 474MHz
*.radioMedium.mediumLimitCache.maxTransmissionPower = 100.0mW

**.host[*].numRadios = 2

#2.4GHz
#**.host[*].wlan[1].**.bandName = "2.4 GHz"
#**.host[*].wlan[1].**.channelNumber = 0
#**.host[*].wlan[1].**.bandwidth = 20MHz
**.host[*].wlan[1].**.power = 100.0mW

#TVWS
**.wlan[0].**.bandName = "TVWS"
**.wlan[0].**.channelNumber = 21
**.wlan[0].**.bandwidth = 8MHz
**.wlan[0].**.power = 10.0W

#*.radioMedium.backgroundNoiseType = "IsotropicScalarBackgroundNoise"
#*.radioMedium.backgroundNoise.power = -86dBm

*.radioMedium.pathLossType = "LogNormalShadowingGrid"
*.radioMedium.pathLoss.shadowFile = xmldoc("shadowGridMap.xml")

*.radioMedium.pathLoss.randomShadowMap = false
*.radioMedium.pathLoss.pathLossAlpha = uniform(2, 5)
#*.radioMedium.pathLoss.pathLossSigma = truncnormal(1.5, 1)
*.radioMedium.pathLoss.pathLossSigma = truncnormal(8, 3)
*.radioMedium.pathLoss.gridCellRandomSize = 100m

*.radioMedium.pathLoss.constraintAreaMinZ = 0m
*.radioMedium.pathLoss.constraintAreaMaxZ = 0m
*.radioMedium.pathLoss.constraintAreaMinX = 100m
*.radioMedium.pathLoss.constraintAreaMinY = 100m
*.radioMedium.pathLoss.constraintAreaMaxX = 1100m
*.radioMedium.pathLoss.constraintAreaMaxY = 1100m

**.environment.objectCacheType = "BVHObjectCache"
#**.environment.config = xmldoc("shadowBG.xml")

*.radioMedium.pathLoss.testShadowDraw = xmldoc("shadowBG.xml")
#*.radioMedium.pathLoss.maxRGBdraw_r = 250
#*.radioMedium.pathLoss.maxRGBdraw_g = 120
#*.radioMedium.pathLoss.maxRGBdraw_b = 150
#*.radioMedium.pathLoss.color2dark = true
*.radioMedium.pathLoss.maxRGBdraw_r = 200
*.radioMedium.pathLoss.maxRGBdraw_g = 52
*.radioMedium.pathLoss.maxRGBdraw_b = 65
*.radioMedium.pathLoss.color2dark = false

# mobility
#**.host[*].mobilityType = "MassMobility"
**.host[*].mobilityType = "FieldForceMobility"
**.host[*].mobility.constraintAreaMinZ = 0m
**.host[*].mobility.constraintAreaMaxZ = 0m
**.host[*].mobility.constraintAreaMinX = 100m
**.host[*].mobility.constraintAreaMinY = 100m
**.host[*].mobility.constraintAreaMaxX = 1100m
**.host[*].mobility.constraintAreaMaxY = 1100m

**.host[*].mobility.towardsNotExploredMapMovement = true
**.host[*].mobility.randomMovement = true
**.host[*].mobility.weigthRandomMovement = 100

**.host[*].mobility.repulsiveForceFromScannedPoints = true

**.host[*].mobility.debugRandomRepulsivePoints = 0

**.host[*].mobility.volatileTimeExponentialDecay = 0.00005
**.host[*].mobility.repulsiveForceWeight = 10
**.host[*].mobility.repulsiveDecay = 0.001

**.tower.mobilityType = "StationaryMobility"
**.tower.mobility.constraintAreaMinZ = 0m
**.tower.mobility.constraintAreaMaxZ = 0m
**.tower.mobility.constraintAreaMinX = 0m
**.tower.mobility.constraintAreaMinY = 0m
**.tower.mobility.constraintAreaMaxX = 100m
**.tower.mobility.constraintAreaMaxY = 100m

#**.mobility.changeInterval = truncnormal(2s, 0.5s)
#**.mobility.changeAngleBy = normal(0deg, 30deg)
#**.mobility.speed = truncnormal(20mps, 8mps)
#**.mobility.updateInterval = 100ms
#**.host[0].mobility.initialX = 10m
#**.host[0].mobility.initialY = 40m
#**.host[1].mobility.initialX = 10m
#**.host[1].mobility.initialY = 70m
**.host[*].mobility.initFromDisplayString = true

#**.tower.networkLayer.configurator.config = xmldoc("configIP.xml")

#USV parameter
**.host[*].usv_brain.pathLossMapAvailable = false
**.host[*].usv_brain.desiredWeigthRatio = 0.1
**.host[*].usv_brain.defaultRepulsiveWeigth = 10
**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}-${runnumber}_cell_report"
**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = 2
**.host[*].usv_brain.checkScanTimeStep = 3s

#udp apps
**.tower.hasUdp = true
**.tower.numUdpApps = 1
**.tower.udpApp[0].typename = "UDPBasicApp"
#**.tower.udpApp[*].destAddresses =  "10.0.0.3"
**.tower.udpApp[*].destAddresses =  "255.255.255.255"
**.tower.udpApp[0].destPort = 1000
**.tower.udpApp[0].messageLength = 100B
**.tower.udpApp[0].startTime = 0s
**.tower.udpApp[0].sendInterval = 330ms
**.tower.networkLayer.ip.forceBroadcast = true

**.host[*].hasUdp = true
**.host[*].numUdpApps = 3

# UDP Sink for tower msgs
**.host[*].udpApp[0].typename = "UDPSink"
**.host[*].udpApp[0].localPort = 1000
**.host[*].udpApp[0].receiveBroadcast = true

# UDP Sink for other hosts msgs
**.host[*].udpApp[1].typename = "CooperativeScanningSink"
**.host[*].udpApp[1].localPort = 1001
**.host[*].udpApp[1].receiveBroadcast = true

# UDP app
**.host[*].udpApp[2].typename = "CooperativeScanningApp"
#**.tower.udpApp[*].destAddresses =  "10.0.0.3"
**.host[*].udpApp[2].destAddresses =  "255.255.255.255"
**.host[*].udpApp[2].destPort = 1001
**.host[*].udpApp[2].messageLength = 100B
**.host[*].udpApp[2].startTime = uniform(0s,5s)
#**.host[*].udpApp[2].sendInterval = normal(1000ms,50ms) #500ms
**.host[*].udpApp[2].sendInterval = normal(5s,500ms) #500ms
#**.host[*].udpApp[2].sendInterval = normal(500ms,100ms) #500ms
**.host[*].networkLayer.ip.forceBroadcast = true

# ping app (host[0] pinged by others)
#*.host[0].pingApp[0].destAddr = ""
#*.host[*].numPingApps = 1
#*.host[*].pingApp[0].destAddr = "host[0]"
#*.host[*].pingApp[0].startTime = uniform(1s,5s)
#*.host[*].pingApp[0].printPing = true

# nic settings
**.wlan[*].bitrate = 2Mbps

**.wlan[*].mgmt.frameCapacity = 10
**.wlan[*].mac.address = "auto"
**.wlan[*].mac.maxQueueSize = 14
**.wlan[*].mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.retryLimit = 7
**.wlan[*].mac.cwMinData = 7
**.wlan[*].mac.cwMinMulticast = 31

[Config Test1]
repeat = 10
sim-time-limit = 1000s

*.numHosts = 20

*.radioMedium.pathLoss.constraintAreaMinZ = 0m
*.radioMedium.pathLoss.constraintAreaMaxZ = 0m
*.radioMedium.pathLoss.constraintAreaMinX = 100m
*.radioMedium.pathLoss.constraintAreaMinY = 100m
*.radioMedium.pathLoss.constraintAreaMaxX = 1100m
*.radioMedium.pathLoss.constraintAreaMaxY = 1100m

**.host[*].mobility.constraintAreaMinZ = 0m
**.host[*].mobility.constraintAreaMaxZ = 0m
**.host[*].mobility.constraintAreaMinX = 100m
**.host[*].mobility.constraintAreaMinY = 100m
**.host[*].mobility.constraintAreaMaxX = 1100m
**.host[*].mobility.constraintAreaMaxY = 1100m

*.radioMedium.pathLoss.shadowFile = xmldoc("shadowGridMap_All4.xml")
*.radioMedium.pathLoss.randomShadowMap = true
*.radioMedium.pathLoss.pathLossAlpha = uniform(2, 5)
*.radioMedium.pathLoss.pathLossSigma = truncnormal(3, 1)
#*.radioMedium.pathLoss.pathLossSigma = truncnormal(8, 3)
*.radioMedium.pathLoss.gridCellRandomSize = 50m

**.host[*].mobility.repulsiveForceFromScannedPoints = true

**.host[*].usv_brain.otherScanToSendProbability = 1
**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = 1

[Config MainTest]
repeat = 20
sim-time-limit = 10800s

**.host[*].udp.vector-recording = false
**.host[*].udpApp[*].vector-recording = false
**.wlan[*].**.vector-recording = false
**.tower.**.vector-recording = false

*.numHosts = 20

*.radioMedium.pathLoss.constraintAreaMinZ = 0m
*.radioMedium.pathLoss.constraintAreaMaxZ = 0m
*.radioMedium.pathLoss.constraintAreaMinX = 100m
*.radioMedium.pathLoss.constraintAreaMinY = 100m
*.radioMedium.pathLoss.constraintAreaMaxX = 2100m
*.radioMedium.pathLoss.constraintAreaMaxY = 2100m

**.host[*].mobility.constraintAreaMinZ = 0m
**.host[*].mobility.constraintAreaMaxZ = 0m
**.host[*].mobility.constraintAreaMinX = 100m
**.host[*].mobility.constraintAreaMinY = 100m
**.host[*].mobility.constraintAreaMaxX = 2100m
**.host[*].mobility.constraintAreaMaxY = 2100m

## PATHLOSS
*.radioMedium.pathLoss.randomShadowMap = true
*.radioMedium.pathLoss.pathLossAlpha = uniform(2, 5)
*.radioMedium.pathLoss.pathLossSigma = truncnormal(3, 2)
#*.radioMedium.pathLoss.pathLossSigma = truncnormal(8, 3)
*.radioMedium.pathLoss.gridCellRandomSize = 50m

## MOBILITY
**.host[*].mobility.repulsiveForceFromScannedPoints = true
**.host[*].mobility.maxspeed = 10mps
**.host[*].mobility.maxacceleration = 2

## BRAIN
**.host[*].usv_brain.otherScanToSendProbability = 1
**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = 1
**.host[*].usv_brain.sizeOfScenaioReportCells = 20m
**.host[*].usv_brain.pathLossMapAvailable = false
**.host[*].usv_brain.alphaOffsetDiffCell = 0.5

#2.4GHz
**.host[*].wlan[1].**.power = 100.0mW

#TVWS
**.wlan[0].**.bandName = "TVWS"
**.wlan[0].**.channelNumber = 21
**.wlan[0].**.bandwidth = 8MHz
**.wlan[0].**.power = 10.0W

**.tower.udpApp[0].sendInterval = 330ms
**.host[*].udpApp[2].sendInterval = normal(5s,500ms) #500ms

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/${configname}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${configname}-${runnumber}.sca

[Config TestAll]
extends = MainTest

repeat = 8

*.numHosts = ${NH=5,10,20,50,100}

*.radioMedium.pathLoss.constraintAreaMaxX = ${PLAMX=600m,1100m,2100m}
*.radioMedium.pathLoss.constraintAreaMaxY = ${PLAMY=600m,1100m,2100m ! PLAMX}
**.host[*].mobility.constraintAreaMaxX = ${MAMX=600m,1100m,2100m ! PLAMX}
**.host[*].mobility.constraintAreaMaxY = ${MAMY=600m,1100m,2100m ! PLAMX}

*.radioMedium.pathLoss.gridCellRandomSize = ${GCRS=50m,100m}

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = ${SMULTTX=0,1,2}

**.host[*].usv_brain.sizeOfScenaioReportCells = ${SREPCELL=20m,50m}
**.host[*].usv_brain.k_over_n = ${KoN=0,1,3}

**.host[*].mobility.maxspeed = ${MAXSPEED=5mps,10mps}

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/nh${NH}-s${PLAMX}-rcs${GCRS}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/nh${NH}-s${PLAMX}-rcs${GCRS}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/nh${NH}-s${PLAMX}-rcs${GCRS}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}.sca


[Config TestOK1]
extends = MainTest

repeat = 8

*.numHosts = ${NH=5,10,20,50,100}

*.radioMedium.pathLoss.constraintAreaMaxX = 2100m
*.radioMedium.pathLoss.constraintAreaMaxY = 2100m
**.host[*].mobility.constraintAreaMaxX = 2100m
**.host[*].mobility.constraintAreaMaxY = 2100m

*.radioMedium.pathLoss.gridCellRandomSize = ${GCRS=50m,100m}

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = ${SMULTTX=0,1,2}

**.host[*].usv_brain.sizeOfScenaioReportCells = ${SREPCELL=20m,50m}
**.host[*].usv_brain.k_over_n = ${KoN=0,1,3}
**.host[*].mobility.maxspeed = ${MAXSPEED=5mps,10mps}

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/nh${NH}-rcs${GCRS}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/nh${NH}-rcs${GCRS}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/nh${NH}-rcs${GCRS}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}.sca

[Config TestOK1000]
extends = MainTest

repeat = 4

sim-time-limit = 7200s

*.numHosts = ${NH=5,10,20,50,100}

*.radioMedium.pathLoss.constraintAreaMaxX = 1100m
*.radioMedium.pathLoss.constraintAreaMaxY = 1100m
**.host[*].mobility.constraintAreaMaxX = 1100m
**.host[*].mobility.constraintAreaMaxY = 1100m

*.radioMedium.pathLoss.gridCellRandomSize = 100m

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = ${SMULTTX=0,1,2}

**.host[*].usv_brain.sizeOfScenaioReportCells = ${SREPCELL=20m,50m}
**.host[*].usv_brain.k_over_n = ${KoN=0,1}
**.host[*].mobility.maxspeed = ${MAXSPEED=5mps,10mps}

*.radioMedium.pathLoss.pathLossSigma = truncnormal(2, 1)

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/nh${NH}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/nh${NH}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/nh${NH}-sig${SMULTTX}-rep${SREPCELL}-s${MAXSPEED}-kon${KoN}-${runnumber}.sca

[Config TestColor]
extends = MainTest

repeat = 1

sim-time-limit = 7200s

*.numHosts = 7

*.radioMedium.pathLoss.constraintAreaMaxX = 1100m
*.radioMedium.pathLoss.constraintAreaMaxY = 1100m
**.host[*].mobility.constraintAreaMaxX = 1100m
**.host[*].mobility.constraintAreaMaxY = 1100m

*.radioMedium.pathLoss.gridCellRandomSize = 100m

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = 1

**.host[*].usv_brain.sizeOfScenaioReportCells = 20m
**.host[*].usv_brain.k_over_n = 1
**.host[*].mobility.maxspeed = 5mps

**.host[*].usv_brain.alphaOffsetDiffCell = ${OFFAL=0.1, 0.3, 0.5, 0.7, 0.9}

*.radioMedium.pathLoss.pathLossSigma = truncnormal(2, 1)

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/offA${OFFAL}-${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/offA${OFFAL}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/offA${OFFAL}-${runnumber}.sca


[Config TestFinal]
extends = MainTest

repeat = 16

sim-time-limit = 7200s

*.numHosts = ${NH=5,10,20,50,100}

*.radioMedium.pathLoss.constraintAreaMaxX = 900m
*.radioMedium.pathLoss.constraintAreaMaxY = 900m
**.host[*].mobility.constraintAreaMaxX = 900m
**.host[*].mobility.constraintAreaMaxY = 900m

*.radioMedium.pathLoss.gridCellRandomSize = 100m

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = ${SMULTTX=0,1,2}

**.host[*].usv_brain.sizeOfScenaioReportCells = 25m
**.host[*].usv_brain.k_over_n = ${KoN=0,1,3}
**.host[*].mobility.maxspeed = ${MAXSPEED=5mps,10mps}

*.radioMedium.pathLoss.pathLossSigma = truncnormal(2, 1)

**.host[*].usv_brain.alphaOffsetDiffCell = 0.5

**.host[*].usv_brain.desiredWeigthRatio = ${DWR=0.01,0.1,0.3,0.5}

**.host[*].mobility.weigthRandomMovement = ${EXPF=10,20,50}
**.host[*].mobility.repulsiveForceWeight = 10

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/nh${NH}-sig${SMULTTX}-s${MAXSPEED}-kon${KoN}-dwr${DWR}-expf${EXPF}-${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/nh${NH}-sig${SMULTTX}-s${MAXSPEED}-kon${KoN}-dwr${DWR}-expf${EXPF}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/nh${NH}-sig${SMULTTX}-s${MAXSPEED}-kon${KoN}-dwr${DWR}-expf${EXPF}-${runnumber}.sca

[Config TestNodiEpsilon]
extends = MainTest

repeat = 20

sim-time-limit = 7200s

*.numHosts = ${NH=5,10,25,50}

*.radioMedium.pathLoss.constraintAreaMaxX = 900m
*.radioMedium.pathLoss.constraintAreaMaxY = 900m
**.host[*].mobility.constraintAreaMaxX = 900m
**.host[*].mobility.constraintAreaMaxY = 900m

*.radioMedium.pathLoss.gridCellRandomSize = 100m

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = 1

**.host[*].usv_brain.sizeOfScenaioReportCells = 25m
**.host[*].usv_brain.k_over_n = 1
**.host[*].mobility.maxspeed = 5mps

*.radioMedium.pathLoss.pathLossSigma = truncnormal(2, 1)

**.host[*].usv_brain.alphaOffsetDiffCell = 0.5

**.host[*].usv_brain.desiredWeigthRatio = ${DWR=0.01,0.1,0.3,0.5}

**.host[*].mobility.weigthRandomMovement = 20
**.host[*].mobility.repulsiveForceWeight = 10

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/nh${NH}-dwr${DWR}-${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/nh${NH}-dwr${DWR}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/nh${NH}-dwr${DWR}-${runnumber}.sca

[Config TestKonSigma]
extends = MainTest

repeat = 20

sim-time-limit = 7200s

*.numHosts = 15

*.radioMedium.pathLoss.constraintAreaMaxX = 900m
*.radioMedium.pathLoss.constraintAreaMaxY = 900m
**.host[*].mobility.constraintAreaMaxX = 900m
**.host[*].mobility.constraintAreaMaxY = 900m

*.radioMedium.pathLoss.gridCellRandomSize = 100m

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = ${SMULTTX=0,1,2,3}

**.host[*].usv_brain.sizeOfScenaioReportCells = 25m
**.host[*].usv_brain.k_over_n = ${KoN=0,1,2,3}
**.host[*].mobility.maxspeed = 5mps

*.radioMedium.pathLoss.pathLossSigma = truncnormal(2, 1)

**.host[*].usv_brain.alphaOffsetDiffCell = 0.5

**.host[*].usv_brain.desiredWeigthRatio = 0.05

**.host[*].mobility.weigthRandomMovement = 20
**.host[*].mobility.repulsiveForceWeight = 10

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/sig${SMULTTX}-kon${KoN}-${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/sig${SMULTTX}-kon${KoN}-${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/sig${SMULTTX}-kon${KoN}-${runnumber}.sca

[Config TestMapDraw]
extends = MainTest

repeat = 3

sim-time-limit = 7200s

*.numHosts = 15

*.radioMedium.pathLoss.constraintAreaMaxX = 900m
*.radioMedium.pathLoss.constraintAreaMaxY = 900m
**.host[*].mobility.constraintAreaMaxX = 900m
**.host[*].mobility.constraintAreaMaxY = 900m

*.radioMedium.pathLoss.gridCellRandomSize = 100m

**.host[*].usv_brain.sigmaMultiplierInTxRangeCalculation = 1

**.host[*].usv_brain.sizeOfScenaioReportCells = 25m
**.host[*].usv_brain.k_over_n = 1
**.host[*].mobility.maxspeed = 5mps

*.radioMedium.pathLoss.pathLossSigma = truncnormal(2, 1)

**.host[*].usv_brain.alphaOffsetDiffCell = 0.5

**.host[*].usv_brain.desiredWeigthRatio = 0.05

**.host[*].mobility.weigthRandomMovement = 20
**.host[*].mobility.repulsiveForceWeight = 10

*.radioMedium.pathLoss.shadowFile = xmldoc("shadowGridMapOK.xml")
*.radioMedium.pathLoss.randomShadowMap = false

**.host[*].usv_brain.outputCellsScanReport = "${resultdir}/${configname}/${runnumber}_cell_report"
output-vector-file = ${resultdir}/${configname}/${runnumber}.vec
output-scalar-file = ${resultdir}/${configname}/${runnumber}.sca